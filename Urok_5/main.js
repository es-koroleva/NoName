// Циклы:
// - for
// - while

// While

// while (condition) {
//     код, который выполняется
// }

// let i = 0;          // выводится 0. 1. 2.
// while (i < 3) {     // при условии, что i<3 => вывести i => прибавить к i +1
//     alert(i);
//     i++;            // если нет итерации (++/--), то цикл становится бесконечным
// }

// ++ - инкремент (увеличивает на 1)
// -- - декремент (уменьшает на 1)

// let counter = 2;
// counter++;               // увеличится на 1
// ++counter;               // возвращает значение перед увеличением
// alert(counter);

// let counter = 2;
// counter--;               //уменьшится на 1
// alert(counter);

// let i = 0;                  // выводится 0. 1. 2.
// while (true) {              // изначально бесконечный цикл без условия выхода
//     if (i < 3) {            //условие может быть гораздо сложнее
//         break;              // выход из цикла
//     }
//     alert(i);
//     i++;                    // если нет итерации (++/--), то цикл становится бесконечным
// }

// Краткий вариант while:
// let i = 3;
// while (i) {                // когда i будет равно 0, условие станет ложным и цикл прекратиться
//     alert (i--);
// }

// do {                        // цикл сначала выполнит тело, а потом выполнит условие condition, пока его значение будет true он будет выполняться снова и снова
//     //тело цикла
// } while (condition);

// let i = 0;
// do {
//     alert(i);
//     i++;
// } while (i<3);


// FOR
// for (начало; условие; шаг;) {
//     // тело функции
// }

// for (let i=0; i<3; i++) {
//     alert(i);
// }
// Выполнить начало:
// let i=0
// Если условие == true -> Выполнить тело, Выполнить шаг:
// if(i<3); {alert(i) i++} // i=0
// Если условие == true -> Выполнить тело, Выполнить шаг:
// if(i<3); {alert(i) i++} // i=1
// Если условие == true -> Выполнить тело, Выполнить шаг:
// if(i<3); {alert(i) i++} // i=2
//.....Конец, т.к. i=3

// (Если устовие == true -> Выполнить тело, выполнить шаг)
// (Если устовие == true -> Выполнить тело, выполнить шаг)
// (Если устовие == true -> Выполнить тело, выполнить шаг)
// ...

// for (let i=0; i<3; i++) {
//     alert(i);
// }
// console.log(i)      // выдаст ошибку, т.к. переменная i внутри функции
// необходимо создать уже существующую переменную:
// let i=0;
// for (let i=0; i<3; i++) {       // используем существующую переменную
//     alert(i);
// }
// console.log(i)                  // выводится 0, т.к. переменная задана вне цикла

// let i=0;
// for (;;) {                  // бесконечный цикл
//     console.log(i++);
//     if (i>10) break;        // break полностью останавливает цикл (т.е. в примере цикл прервется, когда i>10)
// }
// бесконечный цикл + break -> хорошая связка для ситуации, когда условие при котором нужно прерваться находиться в середине цикла

// for (let n=0; n<10; n++) {
//     if(n%2==0) continue;        // continue используется что сделать шаг вперед в цикле не прерывая его полностью (т.е. в примере срабатывает при выведении четного числа)
//     alert(n);
// }

// for (var i=0; i<3; i++) {
//     alert(i);
// }
// console.log(i)      //выдаст в ответ 0, т.к. var имеет более обширную степень видимости, но лучше не использовать

// for (let i=0; i<=50; i++) {
//     if ('i/2!=0') {
//         console.log(i)
//     } else {
//         console.log('Не повезло')
//     }
// }

// ЗАДАНИЕ №1
let i = 1;
while (i<=50) {
    console.log(i);
    i++;
}

// ЗАДАНИЕ №2
for (let n=50; n>=25; n--) {
    console.log(n);
}

//ЗАДАНИЕ №3
for (let b=2500; b<3000; b++) {
    if (b%2==0) continue;
    console.log(b);
}